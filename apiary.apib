FORMAT: 1A
HOST: https://v1.event.dudesolutions.io

USECOMMONSDKLIBRARY: TRUE
GENERATEASYNCCODE: TRUE
GENERATEINTERFACES: TRUE
USEMETHODPREFIX: TRUE
USEMODELPOSTFIX: FALSE
USECONTROLLERPOSTFIX: FALSE
USEENUMPOSTFIX: FALSE
USECONSTRUCTORSFORCONFIG: TRUE
CSHARPDEFAULTNAMESPACE: DSI.SDK.Event
JAVADEFAULTNAMESPACE: io.dudesolutions.event
BRANDLABEL: Dude Solutions, Inc.
USERAGENT: Dude SDK
NULLIFY404: TRUE
VALIDATEREQUIREDPARAMETERS: FALSE
COLLECTPARAMETERS: TRUE
ARRAYSERIALIZATION: Plain

# Dude Event Api

## Reference
Good reference document: https://raw.githubusercontent.com/apiaryio/api-blueprint/master/examples/Polls%20API.md

## Authentication
*[API Name]* uses OAuth v2 Authorization. First you create a new (or acquire existing) OAuth v2 token using [DudeAuth](https://www.dudeauth.com/).

## Media Types
Where applicable this API uses the *JSON* media-type to represent resources.

Requests and responses with a message-body use plain JSON to set or update resources.

## Error States
The common [HTTP Response Status Codes](https://github.com/for-GET/know-your-http-well/blob/master/status-codes.md) are used throughout this API.

In addition to standard response codes the response object returned from the server during an exception event may contain additional information in the following JSON format:

        {
            "message": "SOME MESSAGE",
            "dudeReferenceId": "3523845A-4729-4CCB-9E16-01DEADF6C2DF",
            "stackTrace": "Null, Typically"
        }

# Group System Information

## System Information [/]

### GET

+ Response 200 (application/json)
    + Attributes (System Information)

# Group Heartbeat

## Heartbeat [/heartbeat]
The heartbeat is exposed and provided to check for availability of the service.
Any response that does not provide a ```200 OK``` response code should be treated as an error.

### GET

+ Response 200 (application/json; charset=utf-8)
    + Headers

            X-Dude-Api-Limit: Unlimited or Number
            X-Dude-Api-Remaining: Unlimited or Number
            X-Dude-Api-Server: Api Server ID

    + Attributes (Heartbeat)


# Group Schedule

## Schedule Collection [/accounts/{accountId}/scheduledata{?page,pagesize,orderby}]

+ Parameters
    + accountId: 2 (required, number) - {INT} ID of the account in the form of an integer
    + page: 1 (number, optional) - {INT} The page to request from the collection.
    + pagesize: 1000 (number, optional) - {INT} The number of records to load in a page from the collection.
    + orderby: Id desc (string, optional) - A string describing the ordering to perform on the collection.

### GET

+ Response 200 (application/json; charset=utf-8)
    + Attributes (Base Collection Response)
        + `data` (array[Schedule Data], required)

## Schedule Create [/accounts/{accountId}/scheduledata]

+ Parameters
    + accountId: 2 (required, number) - {INT} ID of the account in the form of an integer

### POST

+ Request
    + Attributes (Base Schedule Data)

+ Response 201 (application/json; charset=utf-8)
    + Attributes (Schedule Data)

## Schedule Detail [/accounts/{accountId}/scheduledata/{scheduleId}]

+ Parameters
    + accountId: 2 (number, required) - {INT} ID of the account in the form of an integer
    + scheduleId: 1 (number, required) - {LONG} The ID of the schedule

### GET

+ Response 200 (application/json; charset=utf-8)
    + Attributes (Schedule Data)

### PUT

+ Request
    + Attributes (Update Schedule Data)

+ Response 200 (application/json; charset=utf-8)
    + Attributes (Schedule Data)

### DELETE

+ Response 204

## Schedule Asset Detail [/accounts/{accountId}/scheduledata/{scheduleId}/businessassets/{id}]

+ Parameters
    + accountId: 2 (number, required) - {INT} ID of the account in the form of an integer
    + scheduleId: 1 (number, required) - {LONG} The ID of the schedule
    + id: 1 (number, required) - {LONG} The ID of the business asset

### PUT

+ Response 202

### DELETE

+ Response 204

## Schedule Asset Generate Work Order [/accounts/{accountId}/scheduledata/{scheduleId}/businessassets/{id}/generate]

+ Parameters
    + accountId: 2 (number, required) - {INT} ID of the account in the form of an integer
    + scheduleId: 1 (number, required) - {LONG} The ID of the schedule
    + id: 1 (number, required) - {LONG} The ID of the business asset

### POST

+ Response 200

## Schedule Asset Generate Work Order [/accounts/{accountId}/scheduledata/{scheduleId}/businessassets/{id}/generate]

+ Parameters
    + accountId: 2 (number, required) - {INT} ID of the account in the form of an integer
    + scheduleId: 1 (number, required) - {LONG} The ID of the schedule
    + id: 1 (number, required) - {LONG} The ID of the business asset

### POST

+ Response 200

# Data Structures

## System Information (object)
+ `application`: `Dude Event Api` (string, required) - The name of the application.
+ `version` : `1.0.0.0` (string, required) - The assembly version.
+ `apiVersion` : `1.0.0.0` (string, required) - The API version.
+ `vitals` (Heartbeat, required) - The state of the system dependencies.
+ `links` (array[System Links], required) - The API routes.

## System Links (object)
+ `endpoint` : `WorkOrder` (string, required) - The name of the endpoint.
+ `action` : `Get` (string, required) - The REST action.
+ `route` : `/accounts/{accountId}/workorders` (string, required) - The route to the endpoint.

## Heartbeat (object)
+ `cachevitalcheck`: true (boolean, required) - Vital check to ensure something is online.
+ `eventdbvitalcheck`: true (boolean, required) - Vital check to ensure something is online.

## Base Collection Response (object)
+ `page`: 1 (number, required) - {INT} The current page provided in the response data.
+ `pageSize`: 1000 (number, required) - {INT} The page size returned in the response data.
+ `dataSize` (number, required) - {INT} The total records returned in the response.
+ `total` (number, required) - {INT} The total number of records available in the collection.

## Base User Object (object)
+ `id`: 1 (number, required) - {INT} The ID of the user.
+ `firstName`: "John" (string, required) - The first name of the user.
+ `lastName`: "Smith" (string, required) - The last name of the user.
+ `email`: "john.smith@dudesolutions.io" (string, required) - The email address of the user.

## Base Client Object (object)
+ `id`: 1 (number, required) - {INT} The ID of the API client.

## Recurrence Pattern (object)
+ `time`: `03:00:00` (string, optional) - The time of the recurrence local to the account's timezone.
+ `dayOfMonth`: 24 (number, optional) - {INT} The day of the month that applies to the recurrence
+ `daysOfWeek` (array[number], optional) - {INT} The days of week that the recurrence applies to
+ `every`: 2 (number, optional) - {INT} How often it repeats
+ `month`: 12 (number, optional) - {INT} The month that the pattern recurs
+ `period`: `Day` (string, optional) - The period
+ `ordinal`: `1` (string, optional) - The integer value relating to an ordinal number (eg: 1 for 1st)
+ `startDateTime`: "2015-10-01T00:00:00Z" (string, optional) - {DATETIME} The date/time that the recurrence pattern starts in UTC.
+ `endDateTime`: "2016-10-01T00:00:00Z" (string, optional) - {DATETIME} The date/time that the recurrence pattern terminates in UTC.
+ `targetDateTime`: "2016-10-01T00:00:00Z" (string, optional) - {DATETIME} The target generation date for the recurrence pattern in UTC.
+ `cronex`: "0 0 12 * * ?" (string, optional) - The cron expression. This is a system generated expression based on the recurrence pattern.

## Base Schedule Data (object)
+ `recurrencePattern` (Recurrence Pattern, required) - The recurrence pattern
+ `isActive`: true (boolean, required) - Boolean value to indicate whether the schedule will continue to generate based on its recurrence pattern
+ `scheduleType`: Fixed (string, required) - A string value representing the schedule type based on the Enum in UnifiedAPI
+ `businessAssets` (array[PmSchedule Business Asset], required) - The business assets on the pm schedule.

## Update Schedule Data (Base Schedule Data)
+ `id`: 1 (number, required) - {LONG} The ID for the object

## Schedule Data (Update Schedule Data)
+ `nextRunDateTime`: `2015-01-01T00:00:00.123Z` (string, optional) - {DATETIME} The next date and time the schedule recurrence pattern will be executed in UTC.
+ `lastRunDateTime`: `2015-01-01T00:00:00.123Z` (string, optional) - {DATETIME} The last date and time the schedule recurrence pattern was executed in UTC.
+ `finalRunDateTime`: `2015-01-01T00:00:00.123Z` (string, optional) - {DATETIME} The last date and time the schedule recurrence pattern will be executed in UTC.

## PmSchedule Business Asset (object)
Represents a business asset associated with a PmSchedule.

### Properties
+ `id`: 1 (number, required) - {LONG} The ID of the object
+ `name`: pump (string, optional) - The name of the asset
+ `description`: outside pump (string, optional) - The description of the asset
+ `isActive`: true (boolean, optional) - Indicates if the asset is active
+ `hasChildren`: true (boolean, optional) - Indicates whether the asset has child assets
+ `notes`: Some notes would go here (string, optional) - Notes about the given asset
+ `hasOpenWorkOrders`: true (boolean, optional) - Indicates whether the asset has open work orders associated with this schedule.
